module(name = "quant-engine")

###############################################################################
# Bazel Dependencies
# https://registry.bazel.build/
###############################################################################
bazel_dep(name = "aspect_bazel_lib", version = "2.9.4")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "protobuf", version = "29.0-rc2.bcr.1")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "rules_apko", version = "1.4.0")
bazel_dep(name = "rules_multirun", version = "0.10.0")
bazel_dep(name = "rules_oci", version = "2.0.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_python", version = "0.40.0")
bazel_dep(name = "rules_proto", version = "7.0.2")
bazel_dep(name = "rules_rust", version = "0.54.1")

bazel_dep(name = "toolchains_protoc", version = "0.3.4", dev_dependency = True)
bazel_dep(name = "toolchains_llvm", version = "1.2.0", dev_dependency = True)
bazel_dep(name = "toolchains_musl", version = "0.1.20", dev_dependency = True)

###############################################################################
# Apko Rules
# https://github.com/chainguard-dev/rules_apko
###############################################################################
# Translate apko.lock.json to @base_image//:contents
# https://edu.chainguard.dev/open-source/build-tools/apko/bazel-rules/
apk = use_extension("@rules_apko//apko:extensions.bzl", "apko")
apk.translate_lock(
    name = "base_image",
    lock = "//images/base_image:apko.lock.json",
)
use_repo(apk, "base_image")

###############################################################################
# LLVM toolchain #
# https://github.com/bazel-contrib/toolchains_llvm/blob/master/toolchain/internal/llvm_distributions.bzl
###############################################################################
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    name = "llvm_toolchain",
    llvm_versions = {
        "": "16.0.0",
        "darwin-aarch64": "18.1.8",
    },
    sha256 = {
        "darwin-aarch64": "41d8dea52d18c4e8b90c4fcd31965f9f297df9f40a38a33d60748dbe7f8330b8",
    },
    stdlib = {
        "linux-x86_64": "stdc++",
        "linux-aarch64": "stdc++",
    },
    urls = {
        "darwin-aarch64": ["https://github.com/MaterializeInc/toolchains/releases/download/clang-18.1.8-4/darwin_aarch64.tar.zst"],
    },
)
use_repo(llvm, "llvm_toolchain", "llvm_toolchain_llvm")

register_toolchains("@llvm_toolchain//:all")

###############################################################################
# Rust toolchain
# https://github.com/bazelbuild/rules_rust/releases
###############################################################################
RUST_EDITION = "2021"  # NOTE: 2024 will be released with Rust 1.86.0

RUST_VERSION = "1.82.0"

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = RUST_EDITION,
    extra_target_triples = [
        "x86_64-unknown-linux-musl",
        "aarch64-unknown-linux-musl",
    ],
    versions = [RUST_VERSION],
)
use_repo(rust, "rust_toolchains")

register_toolchains("@rust_toolchains//:all")

###############################################################################
# Proto Toolchain
# https://github.com/bazelbuild/rules_rust/tree/main/examples/bzlmod/proto_with_toolchain
###############################################################################
register_toolchains("@rules_rust//proto/protobuf:default-proto-toolchain")

register_toolchains("@//build/prost_toolchain")

###############################################################################
# Rust dependencies; see thirdparty/BUILD.bazel
